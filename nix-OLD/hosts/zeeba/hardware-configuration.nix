# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  # fileSystems."/" =
  #   { device = "/dev/disk/by-uuid/1076ff6f-99b8-44fe-91eb-30e5f3e03edd";
  #     fsType = "ext4";
  #   };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/be6d0ed0-f8a7-40aa-a1a0-0bc6365b1f41";
      fsType = "ext4";
    };

  # fileSystems."/boot" =
  #   { device = "/dev/disk/by-uuid/07BE-DA2D";
  #     fsType = "vfat";
  #   };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/67C1-E103";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };


  # swapDevices =
  #   [ { device = "/dev/disk/by-uuid/fc8f6acb-86b7-45fb-8081-7515e2f3a25f"; }
  #   ];

  
  swapDevices =
    [ { device = "/dev/disk/by-uuid/7b48b849-4a7b-470b-8dca-241523bb1c25"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
